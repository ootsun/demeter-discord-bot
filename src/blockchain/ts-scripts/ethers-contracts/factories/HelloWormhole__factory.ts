/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HelloWormhole, HelloWormholeInterface } from "../HelloWormhole";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wormholeRelayer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "greeting",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "senderChain",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "GreetingReceived",
    type: "event",
  },
  {
    inputs: [],
    name: "latestGreeting",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
    ],
    name: "quoteCrossChainGreeting",
    outputs: [
      {
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "sourceChain",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "receiveWormholeMessages",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "targetChain",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "targetAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "greeting",
        type: "string",
      },
    ],
    name: "sendCrossChainGreeting",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormholeRelayer",
    outputs: [
      {
        internalType: "contract IWormholeRelayer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610ad9380380610ad983398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610a3a61009f6000396000818160de015281816101330152818161021f01526102a30152610a3a6000f3fe60806040526004361061004a5760003560e01c80630f4b629a1461004f57806328bd75ce14610064578063529dca3214610097578063921b58a9146100aa578063da25b725146100cc575b600080fd5b61006261005d366004610583565b610118565b005b34801561007057600080fd5b5061008461007f3660046105f7565b6101f4565b6040519081526020015b60405180910390f35b6100626100a5366004610639565b610298565b3480156100b657600080fd5b506100bf610380565b60405161008e919061079e565b3480156100d857600080fd5b506101007f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161008e565b6000610123846101f4565b905080341461013157600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638fecdd0282868686336040516020016101769291906107b1565b604051602081830303815290604052600061c3506040518763ffffffff1660e01b81526004016101aa9594939291906107db565b60206040518083038185885af11580156101c8573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906101ed919061081d565b5050505050565b60405163c23ee3c360e01b815261ffff8216600482015260006024820181905261c3506044830152907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c23ee3c3906064016040805180830381865afa15801561026d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102919190610847565b5092915050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461030b5760405162461bcd60e51b815260206004820152601460248201527313db9b1e481c995b185e595c88185b1b1bddd95960621b604482015260640160405180910390fd5b60008086806020019051810190610322919061086b565b8151919350915061033a90600090602085019061040e565b507f5c4ab0cfb98525b63324629eb8c98352dec2bece203410170311b784050546766000858360405161036f93929190610933565b60405180910390a150505050505050565b6000805461038d906108f9565b80601f01602080910402602001604051908101604052809291908181526020018280546103b9906108f9565b80156104065780601f106103db57610100808354040283529160200191610406565b820191906000526020600020905b8154815290600101906020018083116103e957829003601f168201915b505050505081565b82805461041a906108f9565b90600052602060002090601f01602090048101928261043c5760008555610482565b82601f1061045557805160ff1916838001178555610482565b82800160010185558215610482579182015b82811115610482578251825591602001919060010190610467565b5061048e929150610492565b5090565b5b8082111561048e5760008155600101610493565b803561ffff811681146104b957600080fd5b919050565b6001600160a01b03811681146104d357600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610515576105156104d6565b604052919050565b600067ffffffffffffffff821115610537576105376104d6565b50601f01601f191660200190565b60006105586105538461051d565b6104ec565b905082815283838301111561056c57600080fd5b828260208301376000602084830101529392505050565b60008060006060848603121561059857600080fd5b6105a1846104a7565b925060208401356105b1816104be565b9150604084013567ffffffffffffffff8111156105cd57600080fd5b8401601f810186136105de57600080fd5b6105ed86823560208401610545565b9150509250925092565b60006020828403121561060957600080fd5b610612826104a7565b9392505050565b600082601f83011261062a57600080fd5b61061283833560208501610545565b600080600080600060a0868803121561065157600080fd5b853567ffffffffffffffff8082111561066957600080fd5b61067589838a01610619565b965060209150818801358181111561068c57600080fd5b8801601f81018a1361069d57600080fd5b8035828111156106af576106af6104d6565b8060051b6106be8582016104ec565b918252828101850191858101908d8411156106d857600080fd5b86850192505b83831015610714578235868111156106f65760008081fd5b6107048f8983890101610619565b83525091860191908601906106de565b809a505050505050505060408601359250610731606087016104a7565b949793965091946080013592915050565b60005b8381101561075d578181015183820152602001610745565b8381111561076c576000848401525b50505050565b6000815180845261078a816020860160208601610742565b601f01601f19169290920160200192915050565b6020815260006106126020830184610772565b6040815260006107c46040830185610772565b905060018060a01b03831660208301529392505050565b61ffff861681526001600160a01b038516602082015260a06040820181905260009061080990830186610772565b606083019490945250608001529392505050565b60006020828403121561082f57600080fd5b815167ffffffffffffffff8116811461061257600080fd5b6000806040838503121561085a57600080fd5b505080516020909101519092909150565b6000806040838503121561087e57600080fd5b825167ffffffffffffffff81111561089557600080fd5b8301601f810185136108a657600080fd5b80516108b46105538261051d565b8181528660208385010111156108c957600080fd5b6108da826020830160208601610742565b80945050505060208301516108ee816104be565b809150509250929050565b600181811c9082168061090d57607f821691505b60208210810361092d57634e487b7160e01b600052602260045260246000fd5b50919050565b60608152600080855481600182811c91508083168061095357607f831692505b6020808410820361097257634e487b7160e01b86526022600452602486fd5b606088018490526080880182801561099157600181146109a2576109cd565b60ff198716825282820197506109cd565b60008d81526020902060005b878110156109c7578154848201529086019084016109ae565b83019850505b50508596506109e18189018b61ffff169052565b5050505050506109fc60408301846001600160a01b03169052565b94935050505056fea264697066735822122030c1a737b1c6f928bf2408dc661cd59a80dafb56ae85e0f8299ef79c8a6350cf64736f6c634300080d0033";

type HelloWormholeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloWormholeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloWormhole__factory extends ContractFactory {
  constructor(...args: HelloWormholeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _wormholeRelayer: string,
    overrides?: Overrides & { from?: string }
  ): Promise<HelloWormhole> {
    return super.deploy(
      _wormholeRelayer,
      overrides || {}
    ) as Promise<HelloWormhole>;
  }
  override getDeployTransaction(
    _wormholeRelayer: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_wormholeRelayer, overrides || {});
  }
  override attach(address: string): HelloWormhole {
    return super.attach(address) as HelloWormhole;
  }
  override connect(signer: Signer): HelloWormhole__factory {
    return super.connect(signer) as HelloWormhole__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloWormholeInterface {
    return new utils.Interface(_abi) as HelloWormholeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelloWormhole {
    return new Contract(address, _abi, signerOrProvider) as HelloWormhole;
  }
}
